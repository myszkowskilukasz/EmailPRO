//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestEmailPto.GeneralAPI {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GeneralAPI.IGeneralService")]
    public interface IGeneralService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/Login", ReplyAction="http://tempuri.org/IGeneralService/LoginResponse")]
        string Login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/Login", ReplyAction="http://tempuri.org/IGeneralService/LoginResponse")]
        System.Threading.Tasks.Task<string> LoginAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/Logout", ReplyAction="http://tempuri.org/IGeneralService/LogoutResponse")]
        void Logout(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/Logout", ReplyAction="http://tempuri.org/IGeneralService/LogoutResponse")]
        System.Threading.Tasks.Task LogoutAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/Register", ReplyAction="http://tempuri.org/IGeneralService/RegisterResponse")]
        bool Register(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/Register", ReplyAction="http://tempuri.org/IGeneralService/RegisterResponse")]
        System.Threading.Tasks.Task<bool> RegisterAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/IsThereAUser", ReplyAction="http://tempuri.org/IGeneralService/IsThereAUserResponse")]
        bool IsThereAUser(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/IsThereAUser", ReplyAction="http://tempuri.org/IGeneralService/IsThereAUserResponse")]
        System.Threading.Tasks.Task<bool> IsThereAUserAsync(string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGeneralServiceChannel : TestEmailPto.GeneralAPI.IGeneralService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GeneralServiceClient : System.ServiceModel.ClientBase<TestEmailPto.GeneralAPI.IGeneralService>, TestEmailPto.GeneralAPI.IGeneralService {
        
        public GeneralServiceClient() {
        }
        
        public GeneralServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GeneralServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GeneralServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GeneralServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Login(string username, string password) {
            return base.Channel.Login(username, password);
        }
        
        public System.Threading.Tasks.Task<string> LoginAsync(string username, string password) {
            return base.Channel.LoginAsync(username, password);
        }
        
        public void Logout(string username) {
            base.Channel.Logout(username);
        }
        
        public System.Threading.Tasks.Task LogoutAsync(string username) {
            return base.Channel.LogoutAsync(username);
        }
        
        public bool Register(string username, string password) {
            return base.Channel.Register(username, password);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterAsync(string username, string password) {
            return base.Channel.RegisterAsync(username, password);
        }
        
        public bool IsThereAUser(string username) {
            return base.Channel.IsThereAUser(username);
        }
        
        public System.Threading.Tasks.Task<bool> IsThereAUserAsync(string username) {
            return base.Channel.IsThereAUserAsync(username);
        }
    }
}
