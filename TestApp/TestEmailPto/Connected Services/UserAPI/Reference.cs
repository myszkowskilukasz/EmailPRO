//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestEmailPto.UserAPI {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Message", Namespace="http://schemas.datacontract.org/2004/07/WcfTestProject")]
    [System.SerializableAttribute()]
    public partial class Message : TestEmailPto.UserAPI.DBObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsReadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SentOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string From {
            get {
                return this.FromField;
            }
            set {
                if ((object.ReferenceEquals(this.FromField, value) != true)) {
                    this.FromField = value;
                    this.RaisePropertyChanged("From");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRead {
            get {
                return this.IsReadField;
            }
            set {
                if ((this.IsReadField.Equals(value) != true)) {
                    this.IsReadField = value;
                    this.RaisePropertyChanged("IsRead");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SentOn {
            get {
                return this.SentOnField;
            }
            set {
                if ((this.SentOnField.Equals(value) != true)) {
                    this.SentOnField = value;
                    this.RaisePropertyChanged("SentOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string To {
            get {
                return this.ToField;
            }
            set {
                if ((object.ReferenceEquals(this.ToField, value) != true)) {
                    this.ToField = value;
                    this.RaisePropertyChanged("To");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DBObject", Namespace="http://schemas.datacontract.org/2004/07/WcfTestProject")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestEmailPto.UserAPI.User))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestEmailPto.UserAPI.Message))]
    public partial class DBObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/WcfTestProject")]
    [System.SerializableAttribute()]
    public partial class User : TestEmailPto.UserAPI.DBObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserAPI.IUserService")]
    public interface IUserService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetSentMessages", ReplyAction="http://tempuri.org/IUserService/GetSentMessagesResponse")]
        TestEmailPto.UserAPI.Message[] GetSentMessages(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetSentMessages", ReplyAction="http://tempuri.org/IUserService/GetSentMessagesResponse")]
        System.Threading.Tasks.Task<TestEmailPto.UserAPI.Message[]> GetSentMessagesAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetReceivedMessages", ReplyAction="http://tempuri.org/IUserService/GetReceivedMessagesResponse")]
        TestEmailPto.UserAPI.Message[] GetReceivedMessages(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetReceivedMessages", ReplyAction="http://tempuri.org/IUserService/GetReceivedMessagesResponse")]
        System.Threading.Tasks.Task<TestEmailPto.UserAPI.Message[]> GetReceivedMessagesAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeleteMessage", ReplyAction="http://tempuri.org/IUserService/DeleteMessageResponse")]
        void DeleteMessage(string from, System.DateTime sentOn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeleteMessage", ReplyAction="http://tempuri.org/IUserService/DeleteMessageResponse")]
        System.Threading.Tasks.Task DeleteMessageAsync(string from, System.DateTime sentOn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/SendMessage", ReplyAction="http://tempuri.org/IUserService/SendMessageResponse")]
        void SendMessage(string to, string from, string content, System.DateTime sentOn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/SendMessage", ReplyAction="http://tempuri.org/IUserService/SendMessageResponse")]
        System.Threading.Tasks.Task SendMessageAsync(string to, string from, string content, System.DateTime sentOn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/IsUserActive", ReplyAction="http://tempuri.org/IUserService/IsUserActiveResponse")]
        bool IsUserActive(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/IsUserActive", ReplyAction="http://tempuri.org/IUserService/IsUserActiveResponse")]
        System.Threading.Tasks.Task<bool> IsUserActiveAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ReadMessage", ReplyAction="http://tempuri.org/IUserService/ReadMessageResponse")]
        void ReadMessage(string from, System.DateTime sentOn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ReadMessage", ReplyAction="http://tempuri.org/IUserService/ReadMessageResponse")]
        System.Threading.Tasks.Task ReadMessageAsync(string from, System.DateTime sentOn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeleteMessageByID", ReplyAction="http://tempuri.org/IUserService/DeleteMessageByIDResponse")]
        void DeleteMessageByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeleteMessageByID", ReplyAction="http://tempuri.org/IUserService/DeleteMessageByIDResponse")]
        System.Threading.Tasks.Task DeleteMessageByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ReadMessageByID", ReplyAction="http://tempuri.org/IUserService/ReadMessageByIDResponse")]
        void ReadMessageByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ReadMessageByID", ReplyAction="http://tempuri.org/IUserService/ReadMessageByIDResponse")]
        System.Threading.Tasks.Task ReadMessageByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/isMessageRead", ReplyAction="http://tempuri.org/IUserService/isMessageReadResponse")]
        bool isMessageRead(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/isMessageRead", ReplyAction="http://tempuri.org/IUserService/isMessageReadResponse")]
        System.Threading.Tasks.Task<bool> isMessageReadAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserServiceChannel : TestEmailPto.UserAPI.IUserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<TestEmailPto.UserAPI.IUserService>, TestEmailPto.UserAPI.IUserService {
        
        public UserServiceClient() {
        }
        
        public UserServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TestEmailPto.UserAPI.Message[] GetSentMessages(string username) {
            return base.Channel.GetSentMessages(username);
        }
        
        public System.Threading.Tasks.Task<TestEmailPto.UserAPI.Message[]> GetSentMessagesAsync(string username) {
            return base.Channel.GetSentMessagesAsync(username);
        }
        
        public TestEmailPto.UserAPI.Message[] GetReceivedMessages(string username) {
            return base.Channel.GetReceivedMessages(username);
        }
        
        public System.Threading.Tasks.Task<TestEmailPto.UserAPI.Message[]> GetReceivedMessagesAsync(string username) {
            return base.Channel.GetReceivedMessagesAsync(username);
        }
        
        public void DeleteMessage(string from, System.DateTime sentOn) {
            base.Channel.DeleteMessage(from, sentOn);
        }
        
        public System.Threading.Tasks.Task DeleteMessageAsync(string from, System.DateTime sentOn) {
            return base.Channel.DeleteMessageAsync(from, sentOn);
        }
        
        public void SendMessage(string to, string from, string content, System.DateTime sentOn) {
            base.Channel.SendMessage(to, from, content, sentOn);
        }
        
        public System.Threading.Tasks.Task SendMessageAsync(string to, string from, string content, System.DateTime sentOn) {
            return base.Channel.SendMessageAsync(to, from, content, sentOn);
        }
        
        public bool IsUserActive(string username) {
            return base.Channel.IsUserActive(username);
        }
        
        public System.Threading.Tasks.Task<bool> IsUserActiveAsync(string username) {
            return base.Channel.IsUserActiveAsync(username);
        }
        
        public void ReadMessage(string from, System.DateTime sentOn) {
            base.Channel.ReadMessage(from, sentOn);
        }
        
        public System.Threading.Tasks.Task ReadMessageAsync(string from, System.DateTime sentOn) {
            return base.Channel.ReadMessageAsync(from, sentOn);
        }
        
        public void DeleteMessageByID(int id) {
            base.Channel.DeleteMessageByID(id);
        }
        
        public System.Threading.Tasks.Task DeleteMessageByIDAsync(int id) {
            return base.Channel.DeleteMessageByIDAsync(id);
        }
        
        public void ReadMessageByID(int id) {
            base.Channel.ReadMessageByID(id);
        }
        
        public System.Threading.Tasks.Task ReadMessageByIDAsync(int id) {
            return base.Channel.ReadMessageByIDAsync(id);
        }
        
        public bool isMessageRead(int id) {
            return base.Channel.isMessageRead(id);
        }
        
        public System.Threading.Tasks.Task<bool> isMessageReadAsync(int id) {
            return base.Channel.isMessageReadAsync(id);
        }
    }
}
